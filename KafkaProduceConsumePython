pip install kafka-python

#bootstrap_servers="localhost:9092" argument specifies the host/IP and port that the consumer should contact to
#bootstrap initial cluster metadata
#client_id specifies an id of current admin client

admin_client = KafkaAdminClient(bootstrap_servers="localhost:9092", client_id='test')

#Create a new topic

topic_list = []

new_topic = NewTopic(name="bankbranch", num_partitions= 2, replication_factor=1)
topic_list.append(new_topic)

admin_client.create_topics(new_topics=topic_list)

#Once new topics are created, we can easily check its configuration details using describe_configs() method
configs = admin_client.describe_configs(
    config_resources=[ConfigResource(ConfigResourceType.TOPIC, "bankbranch")])

#Produce messages
producer = KafkaProducer(value_serializer=lambda v: json.dumps(v).encode('utf-8'))

#Since Kafka produces and consumes messages in raw bytes, we need to encode our JSON messages and serialize them
into bytes.
#For the value_serializer argument, we define a lambda function to take a Python dict/list object and
serialize it into bytes.
#Then, with the KafkaProducer created, we can use it to produce two ATM transaction messages in JSON format as follows

producer.send("bankbranch", {'atmid':1, 'transid':100})
producer.send("bankbranch", {'atmid':2, 'transid':101})

#Create consumer and suscribe to topic
consumer = KafkaConsumer('bankbranch')
for msg in consumer:
    print(msg.value.decode("utf-8"))

